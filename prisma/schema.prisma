// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Sex {
  male
  female
}

enum Role {
  ADMIN
  MEMBER
  EMPLOYEE
}

model Dog {
  id        String    @id @default(uuid())
  name      String?
  sex       Sex
  race      String
  color     String
  birth     DateTime?
  microchip String?   @unique
  price     Int
  breeder   Boolean   @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  reserve Reserve?

  image Image[]

  father_litters   Litter[] @relation(name: "father_relation")
  father_litter_id String[]

  mother_litters   Litter[] @relation(name: "mother_relation")
  mother_litter_id String[]

  Litter    Litter? @relation(fields: [litter_id], references: [id])
  litter_id String?

  @@map("dogs")
}

model Litter {
  id         String   @id @default(uuid())
  birth      DateTime
  males      Int
  females    Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  image Image[]

  father    Dog    @relation(name: "father_relation", fields: [father_id], references: [id])
  father_id String

  mother    Dog    @relation(name: "mother_relation", fields: [mother_id], references: [id])
  mother_id String

  dogs Dog[]

  @@map("litters")
}

model User {
  id            String   @id @default(uuid())
  role          Role     @default(MEMBER)
  name          String
  email         String   @unique
  password_hash String
  phone         String?
  city          String?
  street        String?
  state         String?
  number_house  String?
  district      String?
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())

  reserve Reserve[]

  @@map("users")
}

model Reserve {
  id         String    @id @default(uuid())
  delivered  DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())

  User    User?   @relation(fields: [user_id], references: [id])
  user_id String? @unique

  dog    Dog    @relation(fields: [dog_id], references: [id])
  dog_id String @unique

  @@map("reservations")
}

model Image {
  id         String   @id @default(uuid())
  url        String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  Dog        Dog?     @relation(fields: [dogId], references: [id])
  dogId      String?
  Litter     Litter?  @relation(fields: [litter_id], references: [id])
  litter_id  String?
}
